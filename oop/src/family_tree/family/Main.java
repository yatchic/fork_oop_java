package family_tree.family;



    public class Main {
        public static void main(String[] args) {
        /*
        Чтобы создать отдельное семейное древо надо создать отдельный конструктор без параметров к классу FamilyTree.
         */

            FamilyTree romanovy = new FamilyTree();

        /*
                                          Как использовать метод "addRelation".
         addRelation("Основное свойство", "Относительная связь", "Основное свойство связывает с относительной связью с кем, с чем, где, когда и.т.д.");
         addRelation("что или кто", "отношение", "кого, чего, где, когда");

         */
            romanovy.addRelation("Мария", "дочь", "Иван");  //--- Этот код добавляет отношение между двумя людьми. В этом примере “Мария” является “дочерью” “Ивана”.
            romanovy.addRelation("Иван", "отец", "Мария");    //---Иван отец Марии.
            romanovy.addRelation("Иван", "рожден", "12.08.1956"); //--- Дата рождения Ивана.
            romanovy.addRelation("Мария", "рожден", "13.07.1982");  //--- Дата рождения Марии.
            romanovy.addRelation("Барсик", "кот", "Мария");  //--- Владельцем кота Барсика является Мария.
            romanovy.addRelation("шерсть", "длинная", "Барсик");  //--- У кота Барсика длинная шерсть.
            romanovy.addRelation("жигули", "собственность", "Иван");   //--- У Ивана есть машина.


            //romanovy.getChildren();     //---Этот код возвращает список детей указанной семьи.
             //romanovy.showAll();      //---Этот код выводит все отношения, присутствующие в семейном дереве.
            //romanovy.getParents();   //---Этот код возвращает список родителей данного семейного древа.
            //romanovy.deleteRelation(Иван); //---Этот код удаляет указанное отношение из семейного дерева. В данном случае удалиться все, что связано с Иваном: Мария является дочерью Ивана, Иван является отцом Марии и дата рождения Ивана.
            //romanovy.question("Иван", "отец", "Мария"); //--- Задать вопрос является Иван отцом Марии в семейном древе.
            //romanovy.question("Иван", "отец"); //--- Задать вопрос Иван является отцом кого в семейном древе.
            //romanovy.question("Иван");    //--- Задать вопрос кем является Иван в семейном древе.
            //romanovy.question("Мария", "рожден");//--- Задать вопрос когда родилась Мария в семейном древе.
            //romanovy.question("Мария"); //--- Задать вопрос с какими отношениями завязана Мария в семейном древе, в данном случае является:дочерью Ивана, Иван является отцом Марии и дата раждения Марии 13.07.1982.



            FamilyTree petrovy = new FamilyTree();
            petrovy.addRelation("Иван", "сын", "Юлия");


            petrovy.addRelation("Юлия", "рожден", "21.03.1885");
            petrovy.addRelation("Юлия", "умерший", "18.01.1975");

        /*
        В родственных связях надо указывать отношение именно "дочь" или "сын" или "отец" или "мать" иначе методы getChildren и getParents не будут работать:

         petrovy.addRelation("Татьяна", "дочь", "Иван"); так можно,
         petrovy.addRelation("Татьяна", "дочка", "Иван"); так нельзя,
         petrovy.addRelation("Галина", "мать", "Елена"); так можно,
         petrovy.addRelation("Галина", "мама", "Елена"); так нельзя,
         petrovy.addRelation("Сергей", "сын", "Галина"); так можно,
         petrovy.addRelation("Сергей", "сынок", "Галина"); так нельзя,
         petrovy.addRelation("Иван", "отец", "Татьяна"); так можно,
         petrovy.addRelation("Иван", "папа", "Татьяна"); так нельзя.
         */

            petrovy.addRelation("Татьяна", "дочь", "Иван");
            petrovy.addRelation("Татьяна", "дочь", "Галина");
            petrovy.addRelation("Елена", "дочь", "Галина");
            petrovy.addRelation("Галина", "мать", "Елена");
            petrovy.addRelation("Сергей", "сын", "Галина");
            petrovy.addRelation("Елена", "дочь", "Иван");
            petrovy.addRelation("Иван", "отец", "Татьяна");
            petrovy.addRelation("Иван", "рожден", "12.08.1956");
            petrovy.addRelation("Татьяна", "рожден", "13.07.1982");


              FamilyTree dogs = new FamilyTree();

            dogs.addRelation("собака", "регистрационный номер", "1111");
            dogs.addRelation("Бобик", "кличка", "1111");
            dogs.addRelation("овчарка", "порода", "1111");
            dogs.addRelation("кабель", "пол", "1111");
            dogs.addRelation("есть", "прививка", "1111");
            dogs.addRelation("собака", "регистрационный номер", "2111");
            dogs.addRelation("Тузик", "кличка", "2111");
            dogs.addRelation("дворняга", "порода", "2111");
            dogs.addRelation("кабель", "пол", "2111");
            dogs.addRelation("нет", "прививка", "2111");

            dogs.questionAll("дворняга");


     /*
                                         questionAll
        Обобщает все связи, которые относятся к "дворняге", для того чтобы этот метод работал надо добавлять новые отношения таким
        образом, чтобы у всех новых отношение третий параметр был одинаковый тогда метод questionAll будет работать, в данном случае
        метод questionAll отыщит все отношения свызанные со свойством "дворняга" через свойство "2111".

    */





        }

    }





